<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:lang="http://www.springframework.org/schema/lang" 
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
http://www.springframework.org/schema/util 
http://www.springframework.org/schema/util/spring-util-2.0.xsd
 http://www.springframework.org/schema/tx 
 http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
  http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop-2.0.xsd 
   http://www.springframework.org/schema/lang 
   http://www.springframework.org/schema/lang/spring-lang-2.0.xsd 
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context.xsd" 
   xmlns:aop="http://www.springframework.org/schema/aop" 
   xmlns:tx="http://www.springframework.org/schema/tx" 
   xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns="http://www.springframework.org/schema/beans">

<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> <property name="driverClassName" value="com.mysql.jdbc.Driver" /> <property name="url" value="jdbc:mysql://localhost:3306/TestDB" /> <property name="username" value="root" /> <property name="password" value="password" /> </bean> -->


<!-- Enable Annotation based Declarative Transaction Management -->


<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

<!-- Creating TransactionManager Bean, since JDBC we are creating of type DataSourceTransactionManager -->

<!-- 
<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
<property ref="dataSource" name="dataSource"/>

</bean> 
 -->

<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">

<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>

<property name="url" value="jdbc:oracle:thin:@172.16.203.151:1521:traindb"/>

<property name="username" value="akulakarni"/>
 
<property name="password" value="prokarma"/>

</bean>


<bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">

<property ref="dataSource" name="dataSource"/>

</bean>


<!-- <bean class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate" id="namedParameterJdbcTemplate">

<constructor-arg ref="dataSource"/>

</bean> -->

<!-- <bean class="com.pkma.spring.dao.PlayerDAOImplUsingJDBC" id="playerDAOUsingJDBC"/> -->

 <bean class="com.pkrm.DAO.EmployeeDAOImplUsingJdbcTemplate" id="employeeDAOUsingJDBCTemplate"/> 

<!-- <bean class="com.pkrm.DAO.EmployeeDaoImplNamedParameterUsingJdbcTemplate" id="employeeDAOUsingNamedParameterJDBCTemplate"/> -->

<bean class="com.pkrm.service.EmployeeServiceImpl" id="playerService"/>

<!-- <bean class="com.pkma.spring.repository.PlayerRepositoryImpl" id="playerRepository"/> -->

<bean class="com.pkrm.DAO.EmployeeRowMapper" id="employeeRowMapper"/>

<!-- <bean class="com.pkma.spring.dao.PlayerResultSetExtractor" id="playerResultSetExtractor"/> -->

<!-- <bean class="com.pkma.spring.common.DBCPDataSourceFactory" id="dataSourceFactory"/> -->

<!-- <bean class="com.pkma.spring.dao.SequenceDaoImpl" id="sequenceDao"/> -->

<!-- Scans within the base package of the application for @Component classes to configure as beans -->


<!-- With this the above bean declarations for playerDAOUsingJDBCTemplate,playerDAOUsingNamedParameterJDBCTemplate no longer needed -->


<context:component-scan base-package="com.pkma.spring"/>

</beans>